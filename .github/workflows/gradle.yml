name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  Build_APK:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
      #  working-directory: ./culturle
        java-version: '11'
        distribution: 'temurin'
        cache: gradle
    - uses: actions/checkout@v2
    - name: Grant execute permission for gradlew
      working-directory: ./culturle  #Uncomment me - if your gradle file is inside a folder
      run: chmod +x gradlew
    - name: Build APK
      working-directory: ./culturle  #Uncomment me - if your gradle file is inside a folder
      run: ./gradlew assembleDebug # assembleDebug

  Instrumental_Tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Grant execute permission for gradlew
        working-directory: ./culturle  #Uncomment me - if your gradle file is inside a folder
        run: chmod +x gradlew
      - name: Instrumentation Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 28
          working-directory: ./culturle
          script: ./gradlew connectedAndroidTest

  Unit_Tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Grant execute permission for gradlew
        working-directory: ./culturle  #Uncomment me - if your gradle file is inside a folder
        run: chmod +x gradlew
      - name: Unit tests
        working-directory: ./culturle  #Uncomment me - if your gradle file is inside a folder
        run: ./gradlew test
        

  Generate_Docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 12
      uses: actions/setup-java@v1
      with:
       # working-directory: ./culturle
        java-version: 12
    - name: Grant execute permission for gradlew
      working-directory: ./culturle
      run: chmod +x gradlew
    - name: Generate API documentation
      working-directory: ./culturle
      if: ${{github.event_name == 'push'}}
      run: ./gradlew dokkaHtml
    - name: Deploy API documentation to Github Pages
      if: ${{github.event_name == 'push'}}
      uses: peaceiris/actions-gh-pages@v3
      with:
     #   working-directory: ./culturle
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        BRANCH: gh-pages
        publish_dir: .culturle/app/build/dokka/html # specify the 
      # builds zip file with kdoc website inside
    - name: Archive KDoc Documentation
      uses: actions/upload-artifact@v2
      with:
          name: KDoc Documentation Site
    #      working-directory: ./culturle
          path: /culturle/app/build/dokka/html
  
  Code_Coverage:  # https://github.com/arturdm/jacoco-android-gradle-plugin/blob/master/example/build.gradle
      runs-on: macos-latest
      steps:
        - uses: actions/checkout@v3
        - name: set up JDK 11
          uses: actions/setup-java@v3
          with:
            java-version: '11'
            distribution: 'temurin'
            cache: gradle

        - uses: actions/checkout@v2
        - name: Grant execute permission for gradlew
          working-directory: ./culturle
          run: chmod +x gradlew
        - name: Run tests
          uses: reactivecircus/android-emulator-runner@v2
          with:
            api-level: 29
            working-directory: ./culturle
            script: ./gradlew jacocoCombinedTestReports # if your folder is in a path, change this to ./FolderName/gradleW
        - name: Upload coverage reports to Codecov
          run: | # if your project is hosted on a folder --> go to the folder before executing this
            cd culturle
            curl -Os https://uploader.codecov.io/latest/macos/codecov
            chmod +x codecov
            ./codecov
